name: CI - Code Review & Security Scan

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  frontend-checks:
    name: Frontend Linting & Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Run ESLint
        run: |
          cd frontend
          npm run lint
        continue-on-error: true
      
      - name: Run Tests
        run: |
          cd frontend
          npm test
        continue-on-error: true
      
      - name: Build
        run: |
          cd frontend
          npm run build

  backend-checks:
    name: Backend Linting & Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest pytest-cov black
      
      - name: Run Black (formatter check)
        run: |
          cd backend
          black --check .
        continue-on-error: true
      
      - name: Run Flake8
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      
      - name: Run Tests
        run: |
          cd backend
          pytest -v
        continue-on-error: true

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install security tools
        run: |
          pip install bandit safety semgrep
          cd frontend && npm install
      
      - name: Run Bandit (Python Security)
        run: |
          cd backend
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . -f txt
        continue-on-error: true
      
      - name: Run Semgrep
        run: |
          semgrep --config=auto --json --output=semgrep-results.json . || true
          semgrep --config=auto .
        continue-on-error: true
      
      - name: Run npm audit
        run: |
          cd frontend
          npm audit --json > npm-audit.json || true
          npm audit
        continue-on-error: true
      
      - name: Run Safety (Python dependencies)
        run: |
          cd backend
          safety check --json > safety-report.json || true
          safety check
        continue-on-error: true
      
      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            backend/bandit-report.json
            semgrep-results.json
            frontend/npm-audit.json
            backend/safety-report.json
      
      - name: Comment PR with Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## ðŸ”’ Security Scan Summary\n\n';
            
            // Add Bandit results
            try {
              const bandit = JSON.parse(fs.readFileSync('backend/bandit-report.json', 'utf8'));
              const issues = bandit.results || [];
              comment += `**Bandit (Python):** ${issues.length} issues found\n`;
            } catch (e) {
              comment += '**Bandit (Python):** No issues or scan failed\n';
            }
            
            // Add Semgrep results
            try {
              const semgrep = JSON.parse(fs.readFileSync('semgrep-results.json', 'utf8'));
              const results = semgrep.results || [];
              comment += `**Semgrep:** ${results.length} findings\n`;
            } catch (e) {
              comment += '**Semgrep:** No issues or scan failed\n';
            }
            
            comment += '\nâœ… Security scans completed. Review the artifacts for details.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        continue-on-error: true

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [frontend-checks, backend-checks]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build
      
      - name: Verify Backend Setup
        run: |
          cd backend
          pip install -r requirements.txt
          python -c "import app; print('Backend imports successful')"
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
